import{r as s,o as c,c as u,a as e,b as t,w as n,F as p,d as o,e as l}from"./app.c1a8397c.js";import{_ as g}from"./plugin-vue_export-helper.21dcd24c.js";const h={},_=e("h1",{id:"debug",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#debug","aria-hidden":"true"},"#"),o(" Debug")],-1),b=e("p",null,"Debug enables to dump information about errors that may be affecting the software functionality. If Chevereto isn't working properly you must start debugging it.",-1),f=e("h2",{id:"configuring-debug",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#configuring-debug","aria-hidden":"true"},"#"),o(" Configuring debug")],-1),m=o("Debug can be configured using "),v=o("environment"),y=o(" variables or using the "),w=o("settings file"),k=o("."),x=l(`<h3 id="debug-level" tabindex="-1"><a class="header-anchor" href="#debug-level" aria-hidden="true">#</a> Debug level</h3><p>Depending on your work context you may need to configure debug accordingly.</p><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>Error level &gt;= 2 is not recommended for production environments. Is not safe to print the errors to the screen, handle it with care.</p></div><table><thead><tr><th>Level</th><th>Description</th></tr></thead><tbody><tr><td>0</td><td>No debug</td></tr><tr><td>1</td><td>Debug to <code>log_device</code></td></tr><tr><td>2</td><td>Print errors (no logging)</td></tr><tr><td>3</td><td>Print errors and log to <code>log_device</code></td></tr></tbody></table><p>Use <code>CHEVERETO_DEBUG_LEVEL=3</code> or add the following to your <code>app/settings.php</code> file:</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$settings</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;debug_level&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="log-device" tabindex="-1"><a class="header-anchor" href="#log-device" aria-hidden="true">#</a> Log device</h3><p>Configure your own error log device to control where the logs will be sent. If you don&#39;t alter this it will fallback to the default system log device.</p><div class="custom-container tip"><p class="custom-container-title">Containers</p><p>Containers will always log to <code>/dev/stderr</code> regardless this setting.</p></div><p>Use <code>CHEVERETO_ERROR_LOG=log_device</code> or add the following to your <code>app/settings.php</code> file:</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$settings</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;error_log&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;log_device&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="accessing-logs" tabindex="-1"><a class="header-anchor" href="#accessing-logs" aria-hidden="true">#</a> Accessing logs</h2>`,12),C=o("To access logs you will need to know first the location for those. If you don't configure debug Chevereto will follow the default "),E={href:"https://www.php.net/manual/errorfunc.configuration.php#ini.error-log",target:"_blank",rel:"noopener noreferrer"},L=o("error_log"),I=o(" handling configured for your PHP installation."),D=l('<h3 id="where-are-the-default-logs" tabindex="-1"><a class="header-anchor" href="#where-are-the-default-logs" aria-hidden="true">#</a> Where are the default logs?</h3><p>This vary a lot depending the server provider and how PHP runs in the server. In doubt, check first with your service provider.</p><ul><li>PHP <ul><li>Logs by default at <code>syslog</code></li></ul></li><li>Apache <ul><li>Logs by default at <code>/var/log/apache2/error.log</code></li><li>Virtual host directive defines custom error log location</li><li>Commonly configured for <code>/var/www/domain.com/logs</code></li></ul></li><li>NGINX <ul><li>Logs by default at <code>/var/log/nginx/error.log</code></li><li>Server block defines custom error log location</li><li>Commonly configured for <code>/var/www/domain.com/logs</code></li></ul></li><li>cPanel <ul><li>Logs by default at <code>../domain.com.error.log</code> (parent of <code>public_html</code> folder)</li><li>Vary a lot from providers and cPanel version</li></ul></li><li>Docker <ul><li>Logs to <code>/dev/stderr</code></li></ul></li></ul><h3 id="i-can-t-find-the-logs" tabindex="-1"><a class="header-anchor" href="#i-can-t-find-the-logs" aria-hidden="true">#</a> I can&#39;t find the logs</h3><p>You can configure <code>debug_level</code> &gt;= 2 but note that such error reporting level <strong>could compromise</strong> your installation. Restrict any public access to your website and revert back to <code>debug_level=1</code> as soon as possible.</p>',5),N=o("If you can't find the logs or you are having a hard time with this you can request "),P={href:"https://chevereto.com/support",target:"_blank",rel:"noopener noreferrer"},R=o("extra support"),V=o(" so we can safely debug your installation."),G=e("h3",{id:"reading-logs",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#reading-logs","aria-hidden":"true"},"#"),o(" Reading logs")],-1),T=e("p",null,"Logs can be easily accessed by direct file access or by running commands accordingly.",-1),B=e("div",{class:"language-bash ext-sh line-numbers-mode"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token function"},"tail"),o(" -f /var/log/apache2/error.log "),e("span",{class:"token operator"},"|"),o(),e("span",{class:"token function"},"sed"),o(),e("span",{class:"token string"},"'s/\\\\n/\\n/g'"),o(`
`)])]),e("div",{class:"line-numbers"},[e("span",{class:"line-number"},"1"),e("br")])],-1),H=e("div",{class:"language-bash ext-sh line-numbers-mode"},[e("pre",{class:"language-bash"},[e("code",null,[o("docker logs -f container-name "),e("span",{class:"token operator"},"|"),o(),e("span",{class:"token function"},"sed"),o(),e("span",{class:"token string"},"'s/\\\\n/\\n/g'"),o(`
`)])]),e("div",{class:"line-numbers"},[e("span",{class:"line-number"},"1"),e("br")])],-1),q=e("h2",{id:"error-reporting",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#error-reporting","aria-hidden":"true"},"#"),o(" Error reporting")],-1),O=e("div",{class:"custom-container warning"},[e("p",{class:"custom-container-title"},"Not for production!"),e("p",null,"Enable this is recommended only in development environments.")],-1),A=o("To enable printed error reporting you will need to go to "),S=o("system settings"),U=o(". By enabling this all the runtime errors will be printed which means that they will be visible.");function j(F,W){const a=s("RouterLink"),r=s("ExternalLinkIcon"),i=s("CodeGroupItem"),d=s("CodeGroup");return c(),u(p,null,[_,b,f,e("p",null,[m,t(a,{to:"/en/setup/system/environment.html#debug-variables"},{default:n(()=>[v]),_:1}),y,t(a,{to:"/en/setup/server/settings-file.html"},{default:n(()=>[w]),_:1}),k]),x,e("p",null,[C,e("a",E,[L,t(r)]),I]),D,e("p",null,[N,e("a",P,[R,t(r)]),V]),G,T,t(d,null,{default:n(()=>[t(i,{title:"Shell"},{default:n(()=>[B]),_:1}),t(i,{title:"Docker"},{default:n(()=>[H]),_:1})]),_:1}),q,O,e("p",null,[A,t(a,{to:"/en/settings/system.html"},{default:n(()=>[S]),_:1}),U])],64)}var Y=g(h,[["render",j]]);export{Y as default};
