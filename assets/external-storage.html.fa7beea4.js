import{r as n,o as l,c,a as e,b as o,w as i,F as d,e as a,d as t}from"./app.292a7b1f.js";import{_ as h}from"./plugin-vue_export-helper.21dcd24c.js";const u={},g=a('<h1 id="external-storage" tabindex="-1"><a class="header-anchor" href="#external-storage" aria-hidden="true">#</a> External storage</h1><p>External storage allows to use external servers for storing user uploads, which helps to leverage your server load and deliver a more reliable website. If you use multiple external storage servers, it will help to distribute the traffic of these assets.</p><p>External storage works by adding a external storage server where file uploads will be stored. This external storage server expose those files using HTTP, enabling users and visitors of your Chevereto installation to access these images directly.</p><h2 id="storage-url" tabindex="-1"><a class="header-anchor" href="#storage-url" aria-hidden="true">#</a> Storage URL</h2><div class="custom-container tip"><p class="custom-container-title">Storage server provided</p><p>The storage server must provide the URL for public-read file access. Check the documentation of your service provider.</p></div><p>Chevereto maps external storage uploads to the corresponding external storage server using the given Storage URL as a base URL to locate that file in the external storage.</p><p>Using Amazon S3 with direct storage:</p><table><thead><tr><th>Property</th><th>Value</th></tr></thead><tbody><tr><td>Bucket</td><td><code>my-bucket</code></td></tr><tr><td>Storage URL</td><td><code>https://s3.amazonaws.com/my-bucket/</code></td></tr><tr><td>Stored image</td><td><code>my-bucket/image.jpg</code></td></tr><tr><td>Mapped URL</td><td><code>https://s3.amazonaws.com/my-bucket/image.jpg</code></td></tr></tbody></table>',8),p={class:"custom-container tip"},_=e("p",{class:"custom-container-title"},"CNAME",-1),b=t("Is recommended that you use URLs that match your domain so try to take advantage of using a "),m={href:"https://en.wikipedia.org/wiki/CNAME_record",target:"_blank",rel:"noopener noreferrer"},f=t("CNAME record"),k=t("."),S=a(`<p>Amazon S3 with folder-based storage and custom CNAME (<code>img.domain.com</code>):</p><table><thead><tr><th>Property</th><th>Value</th></tr></thead><tbody><tr><td>Bucket</td><td><code>my-bucket</code></td></tr><tr><td>Storage URL</td><td><code>https://img.domain.com/my-bucket/</code></td></tr><tr><td>Stored image</td><td><code>/my-bucket/2020/10/06/image.jpg</code></td></tr><tr><td>Mapped URL</td><td><code>https://img.domain.com/my-bucket/2020/10/06/image.jpg</code></td></tr></tbody></table><h2 id="storage-url-with-cdn" tabindex="-1"><a class="header-anchor" href="#storage-url-with-cdn" aria-hidden="true">#</a> Storage URL with CDN</h2><p>Add a CDN for each storage URL you want to use. At your CDN provider create a pull zone for the origin storage URL.</p><p>If you are using Amazon S3, the source (origin) URL will be something like this:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>https://s3.amazonaws.com/my-bucket/
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>The CDN URL provided by your CDN service will be something like this:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>https://pullzone-url.at.cdn-service.com/
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Adding a CNAME record for the above URL will allow you to end up with a Storage URL like this:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>https://s3-cdn.domain.com/
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="alibaba-cloud-oss" tabindex="-1"><a class="header-anchor" href="#alibaba-cloud-oss" aria-hidden="true">#</a> Alibaba Cloud OSS</h2>`,11),w=t("The Alibaba Cloud OSS API allows to upload images to "),y={href:"https://www.alibabacloud.com/product/oss/",target:"_blank",rel:"noopener noreferrer"},v=t("Alibaba Cloud (Aliyun) Object Storage System (OSS)"),A=t("."),C=e("h2",{id:"amazon-s3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#amazon-s3","aria-hidden":"true"},"#"),t(" Amazon S3")],-1),x=t("The Amazon S3 API allows to upload images to an "),z={href:"https://en.wikipedia.org/wiki/Amazon_S3",target:"_blank",rel:"noopener noreferrer"},R=t("Amazon S3"),P=t(" bucket. You will need an "),T={href:"https://aws.amazon.com/",target:"_blank",rel:"noopener noreferrer"},I=t("Amazon Web Services"),L=t(" (AWS) account for this."),U=t("To setup Amazon S3: "),B=t("Create access credentials from "),N={href:"https://console.aws.amazon.com/iam/home?#users",target:"_blank",rel:"noopener noreferrer"},O=t("Identity and Access Management"),E=t(" console"),M=e("li",null,'Click on "Create New Users", make sure to enable "Programmatic access"',-1),G=e("li",null,[t("On permissions, associate "),e("strong",null,"AmazonS3FullAccess")],-1),j=e("li",null,[t("Store the "),e("strong",null,"user name"),t(", "),e("strong",null,"Access Key ID"),t(" and "),e("strong",null,"Secret Access Key"),t(" at the end of the process")],-1),F=t("Create a bucket from the "),D={href:"https://console.aws.amazon.com/s3",target:"_blank",rel:"noopener noreferrer"},V=t("S3 console"),K=e("li",null,'Click on "Create a Bucket" and proceed to create a bucket',-1),Y=e("li",null,'On permissions, make sure "Block new public ACLs" and "Remove public access" are unchecked (Public access settings)',-1),H=e("li",null,[t("Store the "),e("strong",null,"bucket name"),t(" and the "),e("strong",null,"region")],-1),W=e("li",null,"You don't need to setup logging",-1),J=t("If you want to use a custom domain follow the "),q={href:"https://docs.aws.amazon.com/AmazonS3/latest/dev/VirtualHosting.html#VirtualHostingCustomURLs",target:"_blank",rel:"noopener noreferrer"},Q=t("CNAME"),X=t(" documentation. Otherwise just make sure that the "),Z=e("a",{href:"#storage-url"},"Storage URL",-1),$=t(" ends with "),ee=e("code",null,"/<your_bucket_name>/",-1),te=e("h2",{id:"backblaze-b2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#backblaze-b2","aria-hidden":"true"},"#"),t(" Backblaze B2")],-1),oe=t("The Backblaze B2 API allows to upload images to "),se={href:"https://www.backblaze.com/b2/cloud-storage.html",target:"_blank",rel:"noopener noreferrer"},ae=t("Backblaze's cloud storage system"),re=t("."),ne=a('<ol><li>Go to <strong>B2 Cloud Storage</strong> and click on <strong>Create a Bucket</strong></li><li>Files in Bucket are: <strong>Public</strong></li><li>Go to <strong>App Keys</strong> and click on <strong>Add a New Application Key</strong><ol><li>Type of Access: <strong>Read and Write</strong></li></ol></li><li>When done, use the following reference:</li></ol><p>Select <strong>S3 Compatible</strong> storage API for <strong>B2 S3 Storage</strong> (current offering):</p><table><thead><tr><th>B2 Value</th><th>Chevereto Storage</th></tr></thead><tbody><tr><td>Region</td><td><code>us-west-002</code> (take note from your Endpoint)</td></tr><tr><td>keyID</td><td>Storage key</td></tr><tr><td>applicationKey</td><td>Storage secret</td></tr><tr><td>Endpoint*</td><td><code>https://s3.us-west-002.backblazeb2.com</code></td></tr><tr><td>URL</td><td><code>https://f002.backblazeb2.com/file/your_bucket/</code></td></tr></tbody></table><blockquote><p>(*) You will find the endpoint under the bucket details.</p></blockquote><p>Select <strong>Backblaze B2</strong> storage API for legacy <strong>B2 Storage</strong>:</p><table><thead><tr><th>B2 Value</th><th>Chevereto Storage</th></tr></thead><tbody><tr><td>keyID</td><td>Storage key (Account ID)</td></tr><tr><td>applicationKey</td><td>Storage secret (Master Application Key)</td></tr></tbody></table><h2 id="ftp" tabindex="-1"><a class="header-anchor" href="#ftp" aria-hidden="true">#</a> FTP</h2>',7),ie=t("The FTP API allows to upload images to a server implementing the "),le={href:"https://en.wikipedia.org/wiki/File_Transfer_Protocol",target:"_blank",rel:"noopener noreferrer"},ce=t("File Transfer Protocol"),de=t("."),he=e("h2",{id:"google-cloud",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#google-cloud","aria-hidden":"true"},"#"),t(" Google Cloud")],-1),ue=t("The Google Cloud API allows to upload images to a Google Cloud Storage bucket. You will need a "),ge={href:"https://cloud.google.com/",target:"_blank",rel:"noopener noreferrer"},pe=t("Google Cloud"),_e=t(" service account and "),be={href:"https://cloud.google.com/storage/docs/signup",target:"_blank",rel:"noopener noreferrer"},me=t("activate cloud storage"),fe=t(" for this."),ke=a('<p>To setup Google Cloud Storage:</p><ul><li>Create a project</li><li>Go to <strong>APIs &amp; services</strong> dashboard and make sure that <strong>Google Cloud Storage JSON API</strong> is enabled. <ul><li>If is not enabled click on <strong>Enable API and Services</strong> and enable Google Cloud Storage JSON API</li></ul></li><li>Go to <strong>Cloud Storage</strong> then click on <strong>Browser</strong></li><li>Create a bucket by clicking <strong>Create bucket</strong> button. Make sure to: <ul><li>Prevent public access: Unselect <strong>Enforce public access prevention on this bucket</strong> as you want public access for the bucket</li><li>Access control: Fine-grained</li></ul></li><li>Go to <strong>Credentials</strong> under APIs &amp; services, click on <strong>Create credentials</strong> then click on <strong>Service account</strong>. Make sure to use the following settings: <ul><li>Grant access: Role owner</li><li>Key type: JSON</li></ul></li><li>When done, go to your newly created service account under <strong>Service Accounts</strong></li><li>Go yo <strong>keys</strong> and create a new <strong>JSON key</strong></li><li>Your browser will start to download the JSON key file, the contents of the file is what you need to paste on Chevereto&#39;s <strong>Secret Key</strong> textarea</li></ul><h2 id="local" tabindex="-1"><a class="header-anchor" href="#local" aria-hidden="true">#</a> Local</h2>',3),Se=t("The "),we=t("Local API"),ye=t(" allows to upload images to any filesystem path in the server."),ve=e("h2",{id:"microsoft-azure",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#microsoft-azure","aria-hidden":"true"},"#"),t(" Microsoft Azure")],-1),Ae=t("The Microsoft Azure API allows to upload images to "),Ce={href:"https://azure.microsoft.com/en-us/services/storage/",target:"_blank",rel:"noopener noreferrer"},xe=t("Microsoft Azure Storage"),ze=t("."),Re=e("h2",{id:"openstack",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#openstack","aria-hidden":"true"},"#"),t(" OpenStack")],-1),Pe=t("The "),Te=t("OpenStack API"),Ie=t(" allows to upload images to an "),Le={href:"https://en.wikipedia.org/wiki/OpenStack",target:"_blank",rel:"noopener noreferrer"},Ue=t("OpenStack"),Be=t(" container."),Ne=t("OpenStack configuration for RunAbove: "),Oe=t("Identity URL: "),Ee={href:"https://auth.Runabove.io/v2.0",target:"_blank",rel:"noopener noreferrer"},Me=t("https://auth.Runabove.io/v2.0"),Ge=a("<li>Username: Your RunAbove username</li><li>Password: Your RunAbove password</li><li>Region: <code>SBG-1</code> or <code>BHS-1</code> This is the data center where your container was created</li><li>Container: Name of your created container</li><li>Tenant id: Leave it blank</li><li>Tenant name: Your <code>project id</code>, found on OpenStack Horizon on the left side (CURRENT PROJECT))</li>",6),je=t("URL: Your URL to access the container (see "),Fe={href:"https://community.runabove.com/kb/en/object-storage/how-to-put-object-storage-behind-your-domain-name.html",target:"_blank",rel:"noopener noreferrer"},De=t("RunAbove CNAME"),Ve=t(")"),Ke=a('<h2 id="s3-compatible" tabindex="-1"><a class="header-anchor" href="#s3-compatible" aria-hidden="true">#</a> S3 Compatible</h2><p>The S3 Compatible API allows to upload images to any server implementing the Amazon S3 standard, also known as &quot;AWS S3 API&quot;. The configuration is exactly the same as Amazon S3, but it requires to provide the provider endpoint.</p><p>Some providers supporting S3 API are:</p><ul><li>Vultr Object Storage (use region <code>us-east-1</code>)</li><li>Ceph</li><li>DigitalOcean Spaces</li><li>Dreamhost Cloud Storage</li><li>IBM COS S3</li><li>Minio</li><li>Scaleway</li><li>StackPath</li><li>Tencent Cloud Object Storage (COS)</li><li>Wasabi</li></ul><h2 id="sftp" tabindex="-1"><a class="header-anchor" href="#sftp" aria-hidden="true">#</a> SFTP</h2>',5),Ye=t("The SFTP API allows to upload images to a server implementing the "),He={href:"https://en.wikipedia.org/wiki/SSH_File_Transfer_Protocol",target:"_blank",rel:"noopener noreferrer"},We=t("SSH File Transfer Protocol"),Je=t(".");function qe(Qe,Xe){const s=n("ExternalLinkIcon"),r=n("RouterLink");return l(),c(d,null,[g,e("div",p,[_,e("p",null,[b,e("a",m,[f,o(s)]),k])]),S,e("p",null,[w,e("a",y,[v,o(s)]),A]),C,e("p",null,[x,e("a",z,[R,o(s)]),P,e("a",T,[I,o(s)]),L]),e("ul",null,[e("li",null,[U,e("ul",null,[e("li",null,[B,e("a",N,[O,o(s)]),E]),M,G,j,e("li",null,[F,e("a",D,[V,o(s)])]),K,Y,H,W])])]),e("p",null,[J,e("a",q,[Q,o(s)]),X,Z,$,ee]),te,e("p",null,[oe,e("a",se,[ae,o(s)]),re]),ne,e("p",null,[ie,e("a",le,[ce,o(s)]),de]),he,e("p",null,[ue,e("a",ge,[pe,o(s)]),_e,e("a",be,[me,o(s)]),fe]),ke,e("p",null,[Se,o(r,{to:"/en/settings/external-storage.html#local"},{default:i(()=>[we]),_:1}),ye]),ve,e("p",null,[Ae,e("a",Ce,[xe,o(s)]),ze]),Re,e("p",null,[Pe,o(r,{to:"/en/settings/external-storage.html#openstack"},{default:i(()=>[Te]),_:1}),Ie,e("a",Le,[Ue,o(s)]),Be]),e("ul",null,[e("li",null,[Ne,e("ul",null,[e("li",null,[Oe,e("a",Ee,[Me,o(s)])]),Ge,e("li",null,[je,e("a",Fe,[De,o(s)]),Ve])])])]),Ke,e("p",null,[Ye,e("a",He,[We,o(s)]),Je])],64)}var et=h(u,[["render",qe]]);export{et as default};
