import{r,o as a,c as s,a as o,b as n,F as d,e as i,d as e}from"./app.c1a8397c.js";import{_ as u}from"./plugin-vue_export-helper.21dcd24c.js";const c={},h=i('<h1 id="routes" tabindex="-1"><a class="header-anchor" href="#routes" aria-hidden="true">#</a> Routes</h1><p>Routes refers to virtual paths like <code>/dashboard</code> which doesn&#39;t exists in the system as a real folder and Chevereto map that request to PHP. By default Chevereto comes with a lot of routes and all of them are in the <code>/app/routes</code> folder.</p><p>Custom routes are useful if you want to add things like your own API or you want to change how the default <code>/image</code> route works. With this system you don&#39;t need plugins at all and you can highly customize anything by adding routes or overriding the existing ones.</p><h2 id="adding-or-overwriting-routes" tabindex="-1"><a class="header-anchor" href="#adding-or-overwriting-routes" aria-hidden="true">#</a> Adding or overwriting routes</h2><p>You can totally overwrite the default routes or add your own new routes safely. To do this simply do your work in the <code>app/routes/overrides</code> folder. You will need to look around the default routes to get used to it.</p><p>Feel free to do anything you want in the <code>app/routes/overrides</code> folder, your changes won&#39;t mess the default routes at all and you will keep your changes when you update the script.</p>',6),l=e("Routes are a feature of G\\ Library so you should check the "),p={href:"https://g.chevereto.com/",target:"_blank",rel:"noopener noreferrer"},f=e("G\\ Library documentation"),y=e(" for extended information about system routes.");function m(_,g){const t=r("ExternalLinkIcon");return a(),s(d,null,[h,o("p",null,[l,o("a",p,[f,n(t)]),y])],64)}var k=u(c,[["render",m]]);export{k as default};
